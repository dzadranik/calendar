"use strict";var _Employee=Employee(),loadEmployee=_Employee.loadEmployee,displayEventInformation=_Employee.displayEventInformation,_Calendar=Calendar(),getYear=_Calendar.getYear;function Employee(){var t=[],n=function(t,n){document.querySelector(n).innerHTML+=t},e=function(){return t.map((function(t){return"<tr> ".concat(a(t)+getYear(t.id)," </tr>")})).join("")},a=function(t){var n=t.name,e=t.img,a=t.vacationDaysCount;return'<td>\n\t\t\t\t\t<img class="vacation__employee-photo" src="'.concat(e,'" alt="Employee image" />\n\t\t\t\t\t<div class="vacation__employee-name">').concat(n,"</div>\n\t\t\t\t</td>\n\t\t\t\t<td>").concat(a,"/28</td>")},c=function(t){var n=t.id;t.events.forEach((function(t){return o(t,n)}))},o=function(t,n){var e=t.id,a=t.name,c=t.dateStart,o=t.dateEnd,r=c.split(".").map(parseFloat),d=o.split(".").map(parseFloat),i=r[0],l=r[1],v=d[0],s=d[1],u=function(t,e){return document.querySelector(".js-day-".concat(t,"-").concat(e-1,"-").concat(n))},m=function(t,c){t.classList.add("calendar__day--".concat(a)),t.setAttribute("data-event-id","".concat(n,"-").concat(e,"-").concat(c))};if(l===s)for(var f=i;f<=v;f++)m(u(f,l),l-1);else{for(var p=i;p<=31;p++){var _=u(p,l);_&&m(_,l-1)}for(var y=1;y<=v;y++)m(u(y,s),s-1)}},r=function(t){return"vacation"===t?"отпуск":"red"===t?"красная метка":"yellow"===t?"желтая метка":""};return{loadEmployee:function(){fetch("https://dzadranik.github.io/i-dex/src/js/vacation-calendar.json").then((function(t){return t.json()})).then((function(a){!function(a){t=a,n(e(),".js-vacation-table")}(a),t.forEach((function(t){return c(t)}))}))},displayEventInformation:function(e){var a=e.split("-").map(parseFloat),c=a[0],o=a[1],d=a[2],i=t.find((function(t){return t.id===c})),l=i.events.find((function(t){return t.id===o}));n(function(t,n){var e=t.name,a=t.img,c=n.name,o=n.dateStart,d=n.dateEnd;return'<div class="calendar-event">\n\t\t\t\t\t<div class="calendar-event__employee">\n\t\t\t\t\t\t<img class="calendar-event__employee-photo" src="'.concat(a,'" alt="Employee image">\n\t\t\t\t\t\t<div class="calendar-event__employee-name">').concat(e,'</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="calendar-event__information">\n\t\t\t\t\t\t<div class="calendar-event__date calendar-event__date--').concat(c,'">\n\t\t\t\t\t\t\t').concat(o,".2020 — ").concat(d,'.2020 (14д.)\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="calendar-event__name">').concat(r(c),"</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>")}(i,l),".js-month-".concat(i.id,"-").concat(d))}}}function Calendar(){var t,n,e,a,c,o=function(o){return c=1,function(a){e=a,t=new Date(2020,a+1,0).getDate();var c=new Date(2020,a,1).getDay();n=0===c?6:c-1}(o),'<td>\n\t\t\t\t\t<div class="calendar__month js-month-'.concat(a,"-").concat(o,'"> \n\t\t\t\t\t\t').concat(r(),"\n\t\t\t\t\t</div>\n\t\t\t\t</td>")},r=function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return c<=t?n(e+1,a+=d()):a},d=function(){return'<div class="calendar__week">\n\t\t\t\t\t'.concat(i(),"\n\t\t\t\t</div>")},i=function e(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return a<7?(n>0&&c<7||c>t?(o+=l("calendar__empty"),n--):o+=l("calendar__day"),e(a+1,o)):o},l=function(t){var n="calendar__empty"===t;return!n&&c++,'<div class="'.concat(t," ").concat(n?"":"js-day-".concat(c-1,"-").concat(e,"-").concat(a),'" ></div>')};return{getYear:function(t){return function(t){a=t}(t),function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return n<12?t(n+1,e+=o(n)):e}()}}}window.addEventListener("load",(function(){var t=document.querySelector(".js-vacation-table");t.addEventListener("mouseover",(function(t){t.target.dataset.eventId&&t.target.dataset.eventId!==t.relatedTarget.dataset.eventId&&displayEventInformation(t.target.dataset.eventId)})),t.addEventListener("mouseover",(function(t){t.relatedTarget&&t.relatedTarget.dataset.eventId&&!t.target.dataset.eventId&&document.querySelector(".js-vacation-table .calendar-event").remove()}))})),loadEmployee();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
