"use strict";var _Calendar=Calendar(),returnMonth=_Calendar.returnMonth,returnYear=_Calendar.returnYear,_Employee=Employee(),getEmpoyee=_Employee.getEmpoyee;function Employee(){var t=function(t){return t.map((function(t){return'<tr employee-id="'.concat(t.id,'"> ').concat(function(t){var n=t.name,a=t.img;return'<td>\n\t\t\t\t\t<img class="vacation__employee-photo" src="'.concat(a,'" alt="Employee image" />\n\t\t\t\t\t<div class="vacation__employee-name">').concat(n,"</div>\n\t\t\t\t</td>\n\t\t\t\t<td>").concat(t.vacationDaysCount,"/28</td>")}(t)+returnYear(t.id)," <tr/>")})).join("")},n=function(t){document.querySelector(".js-vacation-table").innerHTML=t},a=function(t){var n=t.id;t.events.forEach((function(t){return e(t,n)}))},e=function(t,n){var a=t.id,e=t.dateStart,r=t.dateEnd,c=t.name,o=e.split(".").map(parseFloat),i=r.split(".").map(parseFloat),d=o[0],u=i[0];if(i[1]==o[1])for(;d<=u;d++){document.querySelector('[data-day="'.concat(d,"-").concat(i[1]-1,"-").concat(a,'"]')).classList.add("calendar__day--".concat(c))}};return{getEmpoyee:function(){fetch("https://dzadranik.github.io/i-dex/src/js/vacation-calendar.json").then((function(t){return t.json()})).then((function(e){return function(e){n(t(e)),e.forEach((function(t){return a(t)}))}(e)}))}}}function Calendar(){var t,n,a,e,r,c=function(t){var n="calendar__day"==t,c='<div class="'.concat(t,'" ').concat(n?'data-day="'.concat(a,"-").concat(e,"-").concat(r,'"'):"","></div>");return n&&(a+=1),c},o=function(e){var r="";return function n(o){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;i<7&&(r+=c(o>0&&a&&0==e||a>t?"calendar__empty":"calendar__day"),n(o-1,i+1))}(n),'<div class="calendar__week">\n\t\t\t\t\t'.concat(r,"\n\t\t\t\t</div>")};return{returnMonth:function(r){a=1,e=r,function(a){var e;t=new Date(2020,a+1,0).getDate(),e=new Date(2020,a,1).getDay(),n=0==e?6:e-1}(r);var c="";return function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;a<=t&&(c+=o(e),n(e+1))}(),'<td>\n\t\t\t\t\t\t<div class="calendar__month">\n\t\t\t\t\t\t\t'.concat(c,"\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>")},returnYear:function(t){var n="";r=t;return function t(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;a<12&&(n+=returnMonth(a),t(a+1))}(),n}}}getEmpoyee();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
