"use strict";var _Employee=Employee(),loadEmployee=_Employee.loadEmployee,loadEventInformation=_Employee.loadEventInformation,_Calendar=Calendar(),getYear=_Calendar.getYear,eventContainer=document.querySelector(".js-vacation-table");function Employee(){var t=[],n=function(t){return t.map((function(t){return'<tr employee-id="'.concat(t.id,'"> ').concat(e(t)+getYear(t.id)," </tr>")})).join("")},e=function(t){var n=t.name,e=t.img;return'<td>\n\t\t\t\t\t<img class="vacation__employee-photo" src="'.concat(e,'" alt="Employee image" />\n\t\t\t\t\t<div class="vacation__employee-name">').concat(n,"</div>\n\t\t\t\t</td>\n\t\t\t\t<td>").concat(t.vacationDaysCount,"/28</td>")},a=function(t,n){document.querySelector(n).innerHTML+=t},o=function(t){var n=t.id;t.events.forEach((function(t){return c(t,n)}))},c=function(t,n){var e=t.id,a=t.dateStart,o=t.dateEnd,c=t.name,r=a.split(".").map(parseFloat),i=o.split(".").map(parseFloat),d=r[0],v=r[1],l=i[0],u=i[1],s=function(t,e){return document.querySelector('[data-day="'.concat(t,"-").concat(e-1,"-").concat(n,'"]'))},m=function(t,a){t.classList.add("calendar__day--".concat(c)),t.setAttribute("data-event-id","".concat(n,"-").concat(e,"-").concat(a))};if(v===u)for(var f=d;f<=l;f++)m(s(f,v),v-1);else{for(var _=d;_<=31;_++){var p=s(_,v);p&&m(p,v-1)}for(var y=1;y<=l;y++)m(s(y,u),u-1)}};return{loadEmployee:function(){fetch("https://dzadranik.github.io/i-dex/src/js/vacation-calendar.json").then((function(t){return t.json()})).then((function(e){return function(e){t=e,a(n(e),".js-vacation-table"),e.forEach((function(t){return o(t)}))}(e)}))},loadEventInformation:function(n){var e=n.split("-").map(parseFloat),o=t.find((function(t){return t.id===e[0]})),c=o.events.find((function(t){return t.id===e[1]}));a(function(t,n){var e=t.name,a=t.img,o=n.name,c=n.dateStart,r=n.dateEnd;return'<div class="calendar-event">\n\t\t\t\t\t<div class="calendar-event__employee">\n\t\t\t\t\t\t<img class="calendar-event__employee-photo" src="'.concat(a,'" alt="Employee image">\n\t\t\t\t\t\t<div class="calendar-event__employee-name">').concat(e,'</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="calendar-event__information">\n\t\t\t\t\t\t<div class="calendar-event__date calendar-event__date--').concat(o,'">\n\t\t\t\t\t\t\t').concat(c,".2020 — ").concat(r,'.2020 (14д.)\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="calendar-event__name">отпуск</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>')}(o,c),".js-month-".concat(o.id,"-").concat(e[2]))}}}function Calendar(){var t,n,e,a,o,c=function(n){o=1,r(n);var e="";return function n(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;o<=t&&(e+=i(a),n(a+1))}(),'<td>\n\t\t\t\t\t<div class="calendar__month js-month-'.concat(a,"-").concat(n,'">\n\t\t\t\t\t\t').concat(e,"\n\t\t\t\t\t</div>\n\t\t\t\t</td>")},r=function(a){e=a,t=new Date(2020,a+1,0).getDate();var o=new Date(2020,a,1).getDay();n=0===o?6:o-1},i=function(e){var a="";return function n(c){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;r<7&&(a+=d(c>0&&0===e||o>t?"calendar__empty":"calendar__day"),n(c-1,r+1))}(n),'<div class="calendar__week">\n\t\t\t\t\t'.concat(a,"\n\t\t\t\t</div>")},d=function(t){var n="calendar__empty"===t,c='<div class="'.concat(t,'" ').concat(n?"":'data-day="'.concat(o,"-").concat(e,"-").concat(a,'"'),"></div>");return!n&&(o+=1),c};return{getYear:function(t){a=t;var n="";return function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;e<12&&(n+=c(e),t(e+1))}(),n}}}eventContainer.addEventListener("mouseover",(function(t){t.target.hasAttribute("data-event-id")&&t.target.hasAttribute("data-event-id")!==t.relatedTarget.hasAttribute("data-event-id")&&loadEventInformation(t.target.getAttribute("data-event-id"))})),eventContainer.addEventListener("mouseover",(function(t){t.relatedTarget.hasAttribute("data-event-id")&&!t.target.hasAttribute("data-event-id")&&document.querySelector(".js-vacation-table .calendar-event").remove()})),loadEmployee();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
