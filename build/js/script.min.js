"use strict";var _Calendar=Calendar(),getYear=_Calendar.getYear,_Employee=Employee(),loadEmployee=_Employee.loadEmployee;function Employee(){var t=function(t){return t.map((function(t){return'<tr employee-id="'.concat(t.id,'"> ').concat(n(t)+getYear(t.id)," <tr/>")})).join("")},n=function(t){var n=t.name,a=t.img;return'<td>\n\t\t\t\t\t<img class="vacation__employee-photo" src="'.concat(a,'" alt="Employee image" />\n\t\t\t\t\t<div class="vacation__employee-name">').concat(n,"</div>\n\t\t\t\t</td>\n\t\t\t\t<td>").concat(t.vacationDaysCount,"/28</td>")},a=function(t){document.querySelector(".js-vacation-table").innerHTML=t},e=function(t){var n=t.id;t.events.forEach((function(t){return c(t,n)}))},c=function(t,n){t.id;var a=t.dateStart,e=t.dateEnd,c=t.name,o=a.split(".").map(parseFloat),r=e.split(".").map(parseFloat),i=o[0],d=o[1],u=r[0],l=r[1],v=function(t,a){return document.querySelector('[data-day="'.concat(t,"-").concat(a-1,"-").concat(n,'"]'))},f=function(t){return t.classList.add("calendar__day--".concat(c))};if(d==l)for(var s=i;s<=u;s++)f(v(s,d));else{for(var m=i;m<=31;m++){var p=v(m,d);p&&f(p)}for(var y=1;y<=u;y++)f(v(y,l))}};return{loadEmployee:function(){fetch("https://dzadranik.github.io/i-dex/src/js/vacation-calendar.json").then((function(t){return t.json()})).then((function(n){return function(n){a(t(n)),n.forEach((function(t){return e(t)}))}(n)}))}}}function Calendar(){var t,n,a,e,c,o=function(n){c=1,r(n);var a="";return function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;c<=t&&(a+=i(e),n(e+1))}(),'<td>\n\t\t\t\t\t<div class="calendar__month">\n\t\t\t\t\t\t'.concat(a,"\n\t\t\t\t\t</div>\n\t\t\t\t</td>")},r=function(e){a=e,t=new Date(2020,e+1,0).getDate();var c=new Date(2020,e,1).getDay();n=0==c?6:c-1},i=function(a){var e="";return function n(o){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;r<7&&(e+=d(o>0&&0==a||c>t?"calendar__empty":"calendar__day"),n(o-1,r+1))}(n),'<div class="calendar__week">\n\t\t\t\t\t'.concat(e,"\n\t\t\t\t</div>")},d=function(t){var n="calendar__empty"==t,o='<div class="'.concat(t,'" ').concat(n?"":'data-day="'.concat(c,"-").concat(a,"-").concat(e,'"'),"></div>");return!n&&(c+=1),o};return{getYear:function(t){e=t;var n="";return function t(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;a<12&&(n+=o(a),t(a+1))}(),n}}}loadEmployee();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
